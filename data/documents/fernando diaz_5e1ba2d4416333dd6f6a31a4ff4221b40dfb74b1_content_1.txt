Title: Overview of the TREC 2021 Fair Ranking Track
Authors: Michael D. Ekstrand, Graham McDonald
Section: 56 0.008593 0.124741 0.009902 0.000342 0.000587 0.015458 0.001078
int64 Now we need to convert this into target exposure levels. This function will, given a series of counts for each work level, compute the expected exposure a page at that work level should receive. def qw tgt exposure(qw counts: pd.Series) -> pd.Series: if 'id' == qw counts.index.names[0]: qw counts = qw counts.reset index(level='id', drop=True) qwc = qw counts.reindex(work order, fill value=0).astype('i4') tot = int(qwc.sum()) da = metrics.discount(tot) qwp = qwc.shift(1, fill value=0) qwc s = qwc.cumsum() qwp s = qwp.cumsum() res = pd.Series( [np.mean(da[s:e]) for (s, e) in zip(qwp s, qwc s)], index=qwc.index ) return res We’ll then apply this to each topic, to determine the per-topic target exposures: qw pp target = qwork.groupby('id').apply(qw tgt exposure) qw pp target.name = 'tgt exposure' qw pp target C:\Users\michaelekstrand\Miniconda3\envs\wptrec\lib\site-packages\numpy\core\fromnumeric.py:3440: RuntimeWarning: Mean of empty slice. return _methods._mean(a, axis=axis, dtype=dtype, C:\Users\michaelekstrand\Miniconda3\envs\wptrec\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in true_divide ret = ret.dtype.type(ret / rcount) id quality 1 Stub 0.114738 Start 0.087373 C 0.081146 B 0.079298 GA 0.078702 ... 150 Start 0.154202 C 0.127359 B 0.120441 GA 0.118827 FA 0.118126 Name: tgt_exposure, Length: 636, dtype: float32 We can now merge the relevant document work categories with this exposure, to compute the target exposure for each relevant document: qp exp = qpw.join(qw pp target, on=['id', 'quality']) qp exp = qp exp.set index(['id', 'page id'])['tgt exposure'] qp exp.index.names = ['q id', 'page id'] qp exp q_id page_id 1 572 0.081146 627 0.078438 903 0.081146 1193 0.079298 1542 0.078702 ... 150 63656179 0.154202 63807245 NaN 64614938 0.127359 64716982 0.127359 65355704 0.127359 Name: tgt_exposure, Length: 2199077, dtype: float32 A.6.2 Geographic Alignment Now that we’ve computed per-page target exposure, we’re ready to set up the geographic alignment vectors for computing the per-group expected exposure with geographic data. We’re going to start by getting the alignments for relevant documents for each topic: qp geo align = qrels.join(page geo align, on='page id').set index(['id', 'page id']) qp geo align.index.names = ['q id', 'page id'] qp geo align Unknown Africa Antarctica Asia Europe \ q_id page_id 1 572 1.0 0.0 0.0 0.0 0.0 627 1.0 0.0 0.0 0.0 0.0 903 1.0 0.0 0.0 0.0 0.0 1193 1.0 0.0 0.0 0.0 0.0 1542 1.0 0.0 0.0 0.0 0.0 ... ... ... ... ... ... 150 63656179 1.0 0.0 0.0 0.0 0.0 63807245 NaN NaN NaN NaN NaN 64614938 1.0 0.0 0.0 0.0 0.0 64716982 1.0 0.0 0.0 0.0 0.0 65355704 1.0 0.0 0.0 0.0 0.0 Latin America and the Caribbean Northern America Oceania q_id page_id 1 572 0.0 0.0 0.0 627 0.0 0.0 0.0 903 0.0 0.0