Title: Regularizing Self-training for Unsupervised Domain Adaptation via Structural Constraints
Authors: Rajshekhar Das, Jonathan Francis, Sanket Vaibhav Mehta, Jean Oh, Emma Strubell, José Moura
Section: C. Additional Visualisations
In Figure 5, we provide additional qualitative comparison between DACS+PAC, DACS and the ground-truth under GTA→Cityscapes settings. Algorithm 1 Unsupervised domain adaptation via PAC-UDA Input: Pseudo-label (ỹ); Target training dataset with depth (Dtdepth = {(xti, hti, ỹti)} Nt i=1 ); Initial model parameters (θ0 = {ψ0, φ0}); Number of histogram bins (b); Peak prominence threshold (δpeak); Number of RGB-segments (ks); Spatial dimensions of depth map (H ×W ); Region-label threshold (τp); Objectness constraint loss weight (αobj); Number of training iterations (Ttrain) Output: Target-domain adapted parameters (θ∗ = {ψ∗, φ∗}) 1: for ttr ← 1 to Ttrain do 2: {(xti, hti, yti)} NBt i=1 ∼ Dth . Randomly sample a training batch from target-domain 3: Compute Luda . Self-training based adaptation objective (see Section 3) 4: Lobj = 0 . Initialise objectness-constraint 5: for i← 1 to NBt do 6: 7: Initialize Vd = {} . Empty list of depth-segments 8: Hist ( {him}HWm=1; b ) → Fd . Histogram of depth values (HOD) 9: FindPeaks(Fd; δpeak) → {µk}kdk=1 . Cluster-center assignment using HOD 10: for k ← 1 to kd do 11: V dk = {m|m ∈ {1, . . . ,HW}, |hm − µk| < |hm − µk′ | ∀k′ 6= k} . Depth segments 12: Vd.append(V dk ) . Depth-segment list update 13: end for 14: 15: Initialize Vs = {} . Empty list of RGB-segments 16: SLIC(xi; ks) → {Lk}ksk=1 . RGB-segment labelling using SLIC [1] 17: for k ← 1 to ks do 18: V sk = {m|m ∈ {1, . . . ,HW}, label(m) = Lk} . RGB-segments 19: Vs.append(V sk ) . RGB-segment list update 20: end for 21: 22: Initialize V = {} . Empty list of object-regions 23: Initialize k = 0 . region-index 24: for i′ ← 1 to ks do 25: for j′ ← 1 to kd do 26: k ← k + 1 . Region-index update 27: Vk = {m|m ∈ V si′ , m ∈ V dj′} . Unique object-region assignment 28: V.append(Vk) . Object-region list update 29: end for 30: end for 31: 32: Fk = Histogram({ỹtim}m∈Vk) ∀k = {1, . . . ,K ′} . Region-wise frequency of pseudo-label classes 33: Initialize U = {} . Empty list of valid regions 34: Initialize L = {} . Empty list of valid region labels 35: for k ← 1 to K ′ do 36: if then max c Fk[c]∑ c Fk[c] ≥ τp . Threshold on majority-voting based region-label 37: Uk = Vk . Valid region assignment